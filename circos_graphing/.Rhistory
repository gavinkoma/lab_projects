library(circlize)
data = read.csv('Mouse3circostest.csv')
setwd("/Users/gavinkoma/Documents/lab_projects/circos_graphing")
library(circlize)
data = read.csv('Mouse3circostest.csv')
data
library(circlize)
library(readxcel)
install.packages("readxl")
library(circlize)
library(readxl)
file_path <- '/Users/gavinkoma/Documents/lab_projects/circos_graphing/Mouse3circostest.xlsx'
data <- read_excel(file_path)
str(data)
head(data)
data
View(data)
data$..1
row.names(data) <- data$ID
View(data)
library(circlize)
library(readxl)
file_path <- '/Users/gavinkoma/Documents/lab_projects/circos_graphing/Mouse3circostest.xlsx'
data <- read_excel(file_path,col_names = True)
library(circlize)
library(readxl)
file_path <- '/Users/gavinkoma/Documents/lab_projects/circos_graphing/Mouse3circostest.xlsx'
data <- read_excel(file_path,col_names = TRUE)
str(data)
head(data)
row.names(data) <- data[,1]
row.names(data) <- data[,1]
data <- rownames_to_column(data,var=data[,1])
install(tibble)
install.packages("tibble")
install.packages("tibble")
library(circlize)
library(readxl)
library(tibble)
file_path <- '/Users/gavinkoma/Documents/lab_projects/circos_graphing/Mouse3circostest.xlsx'
data <- read_excel(file_path,col_names = TRUE)
str(data)
head(data)
row.names(data) <- data[,1]
data <- rownames_to_column(data,var=data[,1])
data
# Set the values in the "..1" column as row names
row.names(data) <- data$`..1`
View(data)
# Set the values in the "..1" column as row names
row.names(data) <- data[,1]
file_path <- '/Users/gavinkoma/Documents/lab_projects/circos_graphing/Mouse3circostest.xlsx'
data <- read_excel(file_path,col_names = TRUE,range="A1")
str(data)
head(data)
# Set the values in the "..1" column as row names
row.names(data) <- data[,1]
file_path <- '/Users/gavinkoma/Documents/lab_projects/circos_graphing/Mouse3circostest.xlsx'
data <- read_excel(file_path,col_names = TRUE)
str(data)
head(data)
# Set the values in the "..1" column as row names
row.names(data) <- data[,1]
data = read.csv('Mouse3circostest.csv')
View(data)
row <- data$X
row.names(data) <- data$X
View(data)
data <- data[,-1]
View(data)
View(data)
chordDiagram(data)
data
# Remove rows and columns containing only 0s
df_no_zeros <- data[rowSums(data != 0) > 0, colSums(data != 0) > 0]
chordDiagram(data)
df_no_zeros
chordDiagram(df_no_zeros)
matrix_data <- data
# Function to convert matrix to adjacency matrix
convert_to_adjacency_matrix <- function(matrix_data) {
adjacency_matrix <- matrix_data > 0  # Convert non-zero elements to TRUE and zeros to FALSE
return(adjacency_matrix)
}
# Convert the matrix to an adjacency matrix
adjacency_matrix <- convert_to_adjacency_matrix(my_matrix)
# Convert the matrix to an adjacency matrix
adjacency_matrix <- convert_to_adjacency_matrix(data)
adjacency_matrix
data = read.csv('Mouse3circostest.csv')
# Set the values in the "..1" column as row names
row <- data$X
row.names(data) <- data$X
data <- data[,-1]
data = read.csv('unsure.csv')
View(data)
row <- data$X
row.names(data) <- data$X
data <- data[,-1]
chordDiagram(data)
library(circlize)
data = read.csv('Mouse3circostest.csv')
new_row_names = data$X
new_data <- data.frame(data[, -1])  # Exclude the 'NewRowNames' column from the new dataframe
rownames(new_data) <- new_row_names  # Set 'NewRowNames' as row names
# Create a chord diagram with the matrix data
chordDiagram(data, transparency = 0.5)
# Load the circlize library
library(circlize)
# Assuming 'data' contains your 25x25 matrix data
# Create a chord diagram with the matrix data
chordDiagram(data, transparency = 0.5)
# Get row and column names
rownames <- rownames(data)
colnames <- colnames(data)
# Define track heights for row and column names
track_height <- 0.5
# Add row names as labels on the outer track
circos.text(rep(1 + track_height * 0.5, length(rownames)),
seq_along(rownames), labels = rownames,
facing = "inside", niceFacing = TRUE,
col = "black", cex = 0.5,
font = 2,
adj = c(0, 0))
# Add column names as labels on the inner track
circos.text(seq_along(colnames),
rep(1 + track_height * 0.5, length(colnames)),
labels = colnames,
facing = "clockwise", niceFacing = TRUE,
col = "black", cex = 0.5,
font = 2,
adj = c(0, 0))
Add column names as labels on the inner track
Add column names as labels on the inner track
library(circlize)
data = read.csv('Mouse3circostest.csv')
new_row_names = data$X
new_data <- data.frame(data[, -1])  # Exclude the 'NewRowNames' column from the new dataframe
rownames(new_data) <- new_row_names  # Set 'NewRowNames' as row names
# Create a chord diagram with the matrix data
chordDiagram(data, transparency = 0.5)
# Load the circlize library
library(circlize)
# Assuming 'data' contains your 25x25 matrix data
# Create a chord diagram with the matrix data
chordDiagram(data, transparency = 0.5)
# Get row and column names
rownames <- rownames(data)
colnames <- colnames(data)
# Define track heights for row and column names
track_height <- 0.5
# Add row names as labels on the outer track
circos.text(rep(1 + track_height * 0.5, length(rownames)),
seq_along(rownames), labels = rownames,
facing = "inside", niceFacing = TRUE,
col = "black", cex = 0.5,
font = 2,
adj = c(0, 0))
# Load the circlize library
library(circlize)
# Assuming 'data' contains your 25x25 matrix data
# Create a chord diagram with the matrix data
chordDiagram(data, transparency = 0.5)
# Get row and column names
rownames <- rownames(data)
colnames <- colnames(data)
# Define track heights for row and column names
track_height <- 0.5
# Add row names as labels on the outer track
circos.text(rep(1 + track_height * 0.5, length(rownames)),
seq_along(rownames), labels = rownames,
facing = "inside", niceFacing = TRUE,
col = "black", cex = 0.5,
font = 2,
adj = c(0, 0))
library(circlize)
data = read.csv('Mouse3circostest.csv')
new_row_names = data$X
new_data <- data.frame(data[, -1])  # Exclude the 'NewRowNames' column from the new dataframe
rownames(new_data) <- new_row_names  # Set 'NewRowNames' as row names
# Create a chord diagram with the matrix data
chordDiagram(data, transparency = 0.5)
# Load the circlize library
library(circlize)
# Assuming 'data' contains your 25x25 matrix data
# Create a chord diagram with the matrix data
chordDiagram(data, transparency = 0.5)
# Get row and column names
rownames <- rownames(data)
colnames <- colnames(data)
# Define track heights for row and column names
track_height <- 0.5
# Add row names as labels on the outer track
circos.text(rep(1 + track_height * 0.5, length(rownames)),
seq_along(rownames), labels = rownames,
facing = "inside", niceFacing = TRUE,
col = "black", cex = 0.5,
font = 2,
adj = c(0, 0))
# Add column names as labels on the inner track
circos.text(seq_along(colnames),
rep(1 + track_height * 0.5, length(colnames)),
labels = colnames,
facing = "clockwise", niceFacing = TRUE,
col = "black", cex = 0.5,
font = 2,
adj = c(0, 0))
# Load the circlize library
data = read.csv('unsure.csv')
new_row_names = data$X
new_data <- data.frame(data[, -1])  # Exclude the 'NewRowNames' column from the new dataframe
rownames(new_data) <- new_row_names  # Set 'NewRowNames' as row names
View(new_data)
library(circlize)
# Assuming 'data' contains your 25x25 matrix data
# Create a chord diagram with the matrix data
chordDiagram(data, transparency = 0.5)
library(circlize)
# Assuming 'data' contains your 25x25 matrix data
# Create a chord diagram with the matrix data
chordDiagram(data, transparency = 0.5)
FALSE
library(circlize)
# Assuming 'data' contains your 25x25 matrix data
# Create a chord diagram with the matrix data
chordDiagram(data, transparency = 0.5)
library(circlize)
data = read.csv('unsure.csv')
new_row_names = data$X
new_data <- data.frame(data[, -1])  # Exclude the 'NewRowNames' column from the new dataframe
rownames(new_data) <- new_row_names  # Set 'NewRowNames' as row names
# Create a chord diagram with the matrix data
chordDiagram(data, transparency = 0.5)
data = read.csv('Mouse3circostest.csv')
new_row_names = data$X
new_data <- data.frame(data[, -1])  # Exclude the 'NewRowNames' column from the new dataframe
rownames(new_data) <- new_row_names  # Set 'NewRowNames' as row names
# Create a chord diagram with the matrix data
chordDiagram(data, transparency = 0.5)
# Load the circlize library
data = read.csv('unsure.csv')
new_row_names = data$X
new_data <- data.frame(data[, -1])  # Exclude the 'NewRowNames' column from the new dataframe
rownames(new_data) <- new_row_names  # Set 'NewRowNames' as row names
library(circlize)
data = read.csv('Mouse3circostest.csv')
new_row_names = data$X
new_data <- data.frame(data[, -1])  # Exclude the 'NewRowNames' column from the new dataframe
rownames(new_data) <- new_row_names  # Set 'NewRowNames' as row names
# Create a chord diagram with the matrix data
chordDiagram(data, transparency = 0.5)
View(new_data)
# Create a chord diagram with the matrix data
chordDiagram(new_data, transparency = 0.5)
View(data)
library(circlize)
library(readxl)
library(tibble)
#file_path <- '/Users/gavinkoma/Documents/lab_projects/circos_graphing/Mouse3circostest.xlsx'
#data <- read_excel(file_path,col_names = TRUE)
#str(data)
#head(data)
data = read.csv('unsure.csv')
# Set the values in the "..1" column as row names
row <- data$X
row.names(data) <- data$X
data <- data[,-1]
chordDiagram(data)
